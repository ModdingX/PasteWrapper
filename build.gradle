import java.nio.file.Files

apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'maven-publish'

group 'org.moddingx'
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'com.sparkjava:spark-core:2.9.4'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'org.slf4j:slf4j-api:2.0.7'
    runtimeOnly 'org.slf4j:slf4j-jdk14:2.0.7'
}

application.mainClass = "org.moddingx.pastewrapper.Main"

jar {
    manifest.attributes([
            "Main-Class": application.mainClass.get(),
            "Automatic-Module-Name": "org.moddingx.pastewrapper",
            "Implementation-Version": project.version
    ])
}

task collectDependencies {
    doFirst {
        Files.createDirectories(project.file('build').toPath())
        Writer writer = Files.newBufferedWriter(project.file('build/deps.txt').toPath())
        var processDeps
        processDeps = { Project p ->
            p.configurations.runtimeClasspath.getAllDependencies().forEach { dep ->
                if (dep instanceof ExternalModuleDependency) {
                    writer.write("${dep.group}:${dep.name}:${dep.version}\n")
                } else if (dep instanceof ProjectDependency) {
                    processDeps(dep.dependencyProject)
                } else {
                    throw new IllegalStateException("Invalid dependency: ${dep}")
                }
            }
        }
        processDeps(project)
        writer.close()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url rootProject.file('../moddingx/maven')
        }
    }
}
